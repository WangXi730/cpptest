#pragma once
#include<iostream>
#include<vector>
#include<queue>
using namespace std;
namespace wx {
	//申明函数
	void Distribute_Collect(int k, typename vector<int>::iterator left, typename vector<int>::iterator right);

	//基数排序
	void RadixSort(typename vector<int>::iterator left, typename vector<int>::iterator right) {
		//涉及两个步骤：分发、回收
		//需要最大的位数
		int k = 0;
		for (int i = 0; i < right - left; ++i) {
			int kt = 0;
			int val = *(left + i);
			while (val) {
				val /= 10;
				kt += 1;
			}
			if (kt > k)
				k = kt;
		}
		for (int i = 1; i <= k; ++i) {
			//分发、回收同一个函数完成
			Distribute_Collect(i,left,right);
		}
	}

	void Distribute_Collect(int k, typename vector<int>::iterator left, typename vector<int>::iterator right) {
		//用队列完成先进先出
		vector<queue<int>> tmp(10);
		int kn = 1;//kn就是10^(k-1)
		for (int i = 1; i < k; ++i) {
			kn *= 10;
		}
		for (int i = 0; i < right - left; ++i) {
			tmp[(*(left + i) / kn) % 10].push(*(left + i));
		
		}
		//接下来回收
		for (int i = 0; i < 10; ++i) {
			while (!tmp[i].empty()) {
				*(left++) = tmp[i].front();
				tmp[i].pop();
			}
		}
	}

}